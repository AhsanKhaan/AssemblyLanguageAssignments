.MODEL SMALL
.STACK 200h
.DATA
.CODE
VAR1 DW 0
MAIN PROC

MOV AX,@DATA
MOV DS,AX

MOV CX,0
CALL INDEC 
 
MOV VAR1,AX

 MOV AH,2
 MOV DL,13
 INT 21h
 
  MOV DL,10
  INT 21h
  
   MOV AX,VAR1 
L1:
MOV DX,0
MOV BX,10
DIV BX
PUSH DX
INC CX
CMP AX,0
JE @SUM

JMP L1 

@SUM:

L2:

POP BX
ADD AX,BX

LOOP L2   

CALL OUTDEC 

MOV AH,4CH
INT 21h

MAIN ENDP
INDEC PROC
PUSH BX
PUSH CX
PUSH DX

@BEGIN:

MOV BX,0
MOV CX,0

MOV AH,1
INT 21h

CMP AL,'+'
JE PLUS

CMP AL,'-'
JE MINUS
JMP @LOOP
MINUS:
MOV CX,1
PLUS:
INT 21H

@LOOP:
 CMP AL,'0'
JNGE INVALID

CMP AL,'9'
JNLE INVALID

SUB AL,48
MOV AH,0

PUSH AX
MOV AX,10
MUL BX

POP BX
ADD BX,AX
MOV AH,1
INT 21h

CMP AL,13
JNE @LOOP

MOV AX,BX
CMP CX,1
JNE EXIT
NEG AX

EXIT: 

POP DX
POP CX
POP BX
RET

INVALID:
MOV AH,2
MOV DL,13
INT 21h

MOV DL,10
INT 21h
JMP @BEGIN

INDEC ENDP

OUTDEC PROC 

PUSH AX
PUSH BX 
PUSH DX
PUSH CX 

MOV CX,0
CMP AX,0
JGE @ELSE

PUSH AX 

MOV AH,2
MOV DL,'-'
INT 21h

POP AX
NEG  AX 
@ELSE:


MOV DX,0
MOV  BX,10
DIV BX 
PUSH DX 
INC CX 
CMP AX,0
JNZ @ELSE

MOV AH,2

PRINT_LABEL:
POP DX 
ADD DL,48
INT 21h

LOOP PRINT_LABEL 
POP DX 
POP CX 
POP BX 
POP AX 

RET 

OUTDEC ENDP 

END MAIN

